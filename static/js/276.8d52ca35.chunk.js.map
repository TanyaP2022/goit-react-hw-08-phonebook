{"version":3,"file":"static/js/276.8d52ca35.chunk.js","mappings":"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","sources":["components/Phonebook/ContactForm/ContactForm.styled.jsx","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/ContactsList/ContactsList.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/Filter.jsx","redux/contact/selectors.js","components/Phonebook/Phonebook.jsx","pages/MyPhonebook/MyPhonebook.jsx","shared/hooks/useForm.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  border-radius: 10px;\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    border-color: blue;\n  }\n`;","import { nanoid } from 'nanoid';\n\nimport { useMemo } from 'react';\nimport useForm from 'shared/hooks/useForm';\nimport { Input } from './ContactForm.styled';\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { grid } from '@mui/system';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm({ onSubmit }) {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const nameId = useMemo(() => nanoid(), []);\n  const numberId = useMemo(() => nanoid(), []);\n\n  const { name, number } = state;\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'block',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Box\n        px={{ xs: '5px', md: '40px' }}\n        component=\"div\"\n        sx={{\n          gridGap: '20px',\n          alignItems: 'center',\n          display: grid,\n          gap: '20px',\n          gridTemplateColumns: '70px ,1fr',\n          mb: '15px',\n        }}\n      >\n        <AccountCircle sx={{ color: 'action.active', mb: 0.5 }} />\n        <Input\n          id={nameId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        px={{ xs: '5px', md: '40px' }}\n        sx={{\n          gridGap: '20px',\n          alignItems: 'center',\n          display: grid,\n          gap: '20px',\n          gridTemplateColumns: '70px ,1fr',\n          mb: '15px',\n        }}\n      >\n        <Input\n          id={numberId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Phone\"\n          value={number}\n          onChange={handleChange}\n        />\n      </Box>\n      <Button\n        variant=\"contained\"\n        sx={{\n          backgroundColor: '#778089',\n          width: '200px',\n          height: '50px',\n          mx: 'auto',\n        }}\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n}","import PropTypes from 'prop-types';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ListItemText from '@mui/material/ListItemText';\n\nexport default function ContactsList({ items, removeContact }) {\n  const elements = items.map(({ name, number, id }) => {\n    return (\n      <ListItem\n        disableGutters\n        secondaryAction={\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            type=\"button\"\n            onClick={() => {\n              removeContact(id);\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        }\n        key={id}\n      >\n        <ListItemText primary={`${name} : ${number}`} />\n      </ListItem>\n    );\n  });\n  return (\n    <List\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n      }}\n    >\n      {elements}\n    </List>\n  );\n}\n\nContactsList.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      createdAt: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Blok = styled.div`\n  /* text-align: center; */\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\nexport const Input = styled.input`\n  min-width: 200px;\n  height: 40px;\n  border-radius: 8px;\n  border: none;\n  margin-left: 5px;\n  padding: 10px;\n\n  &:hover,\n  &:focus {\n    border-color: blue;\n  }\n`;","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport { Label, Input } from './Filter.styled';\nexport default function Filter({ onChange, value }) {\n  const filterid = nanoid();\n  return (\n    <>\n      <Label htmlFor={filterid}>\n        Find contacts by name\n        <Input\n          id={filterid}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n        />\n      </Label>\n    </>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};","export const getFilter = state => state.filter;\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilteredContacts = ({ filter, contacts }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  const filteredContacts = contacts.items.filter(({ name, number }) => {\n    const normalizedName = name.toLocaleLowerCase();\n    const normalizedNumber = number.toLocaleLowerCase();\n    const result =\n      normalizedName.includes(normalizedFilter) ||\n      normalizedNumber.includes(normalizedFilter);\n\n    return result;\n  });\n  return filteredContacts;\n};\n","import ContactForm from 'components/Phonebook/ContactForm/ContactForm';\nimport ContactsList from 'components/Phonebook/ContactsList/ContactsList';\nimport Filter from 'components/Phonebook/Filter/Filter';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getFilteredContacts,\n  getFilter,\n  getState,\n} from '../../redux/contact/selectors';\n\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from '../../redux/contact/contactsOperation';\nimport { setFilter } from '../../redux/contact/filterSlice';\nimport { useEffect } from 'react';\nimport { grid } from '@mui/system';\n\nexport default function Phonebook() {\n  const contacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n  const { loading, error } = useSelector(getState);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const hendelChenge = ev => {\n    const { value } = ev.target;\n    dispatch(setFilter(value));\n  };\n\n  const onAddContact = contact => {\n    const action = addContact(contact);\n    dispatch(action);\n  };\n  const onRemoveContact = id => {\n    const action = removeContact(id);\n    dispatch(action);\n  };\n\n  return (\n    <Box\n      component=\"section\"\n      sx={{\n        maxWidth: '800px',\n        mx: 'auto',\n        minHeight: '100vh',\n        pt: '60px',\n        borderColor: 'primary.main',\n        borderRadius: '16px',\n        bgcolor: 'info.main',\n        textAlign: 'center',\n      }}\n    >\n      <Box\n        component=\"div\"\n        sx={{\n          gridGap: '20px',\n          display: grid,\n          gridTemplateColumns: '70px, 1fr',\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          component=\"h2\"\n          sx={{ fontWeight: 400, fontSize: '32px', pt: '16px' }}\n        >\n          Phonebook\n        </Typography>\n        <ContactForm onSubmit={onAddContact} />\n      </Box>\n      <Box component=\"div\" sx={{ mx: 'auto', p: '30px' }}>\n        <Typography\n          variant=\"h4\"\n          component=\"h2\"\n          sx={{ fontWeight: 400, mb: '20px', textAlign: 'center' }}\n        >\n          Contacts\n        </Typography>\n\n        <Filter onChange={hendelChenge} value={filter} />\n\n        {contacts.length > 0 && (\n          <ContactsList items={contacts} removeContact={onRemoveContact} />\n        )}\n        {loading && <p>...loading</p>}\n        {error && <p>oops, something went wrong</p>}\n      </Box>\n    </Box>\n  );\n}","import Phonebook from 'components/Phonebook/Phonebook';\nimport Container from '@mui/material/Container';\n\nexport default function MyPhonebook() {\n  return (\n    <Container sx={{ mt: '1rem', maxWidth: '1000px' }}>\n      <Phonebook />\n    </Container>\n  );\n}","import { useState } from 'react';\n\nexport default function useForm({ initialState, onSubmit }) {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n}\n"],"names":["Input","styled","initialState","name","number","ContactForm","onSubmit","useForm","state","handleChange","handleSubmit","nameId","useMemo","nanoid","numberId","Box","component","sx","display","px","xs","md","gridGap","alignItems","grid","gap","gridTemplateColumns","mb","AccountCircle","color","id","type","pattern","title","required","placeholder","value","onChange","Button","variant","backgroundColor","width","height","mx","ContactsList","items","removeContact","elements","map","ListItem","disableGutters","secondaryAction","IconButton","edge","onClick","Delete","ListItemText","primary","List","maxWidth","Label","Filter","filterid","htmlFor","getFilter","filter","getState","contacts","loading","error","getFilteredContacts","normalizedFilter","toLocaleLowerCase","normalizedName","normalizedNumber","includes","Phonebook","useSelector","dispatch","useDispatch","useEffect","fetchContacts","minHeight","pt","borderColor","borderRadius","bgcolor","textAlign","Typography","fontWeight","fontSize","contact","action","addContact","p","ev","target","setFilter","length","MyPhonebook","Container","mt","useState","setState","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}