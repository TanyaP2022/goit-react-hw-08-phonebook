{"version":3,"file":"static/js/441.10265313.chunk.js","mappings":"sTAQMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDN,aAAAA,EACAK,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKvBC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAClCC,GAAaF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnCV,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SAEf,OACE,UAACW,EAAA,EAAD,CAAKC,UAAU,OAAOV,SAAUI,EAAcO,GAAI,CAAEC,SAAU,OAA9D,WACE,SAACC,EAAA,EAAD,CACEC,GAAIT,EACJT,KAAK,QACLmB,KAAK,QACLC,MAAM,QACNC,MAAOpB,EACPqB,UAAQ,EACRP,GAAI,CAAEQ,GAAI,UACVC,SAAUjB,KAEZ,SAACU,EAAA,EAAD,CACEC,GAAIN,EACJZ,KAAK,WACLmB,KAAK,WACLC,MAAM,WACNC,MAAOnB,EACPoB,UAAQ,EACRP,GAAI,CAAEQ,GAAI,UACVC,SAAUjB,KAEZ,SAACkB,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,UACE,SAACC,EAAA,EAAD,CACET,KAAK,SACLU,QAAQ,YACRd,GAAI,CAAEe,GAAI,QACVC,MAAM,UAJR,uBAWP,C,iCCpDYC,EAAe,CAC1BC,UAAW,EACXjB,SAAU,QACVc,GAAI,OACJI,GAAI,EACJC,EAAG,EACHC,OAAQ,GAGK,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACC,EAAA,EAAD,CAAWzB,GAAI,CAAE0B,GAAI,OAAQzB,SAAU,UAAvC,UACE,SAACH,EAAA,EAAD,CAAKE,IAAE,kBAAOiB,GAAP,IAAqBU,aAAc,SAA1C,UACE,SAACvC,EAAD,CAAWC,SAPD,SAAAuC,GACdL,GAASM,EAAAA,EAAAA,IAAMD,GAChB,OASF,C,iGC3Bc,SAAStC,EAAT,GAA8C,IAA3BN,EAA0B,EAA1BA,aAAcK,EAAY,EAAZA,SAC9C,GAA0ByC,EAAAA,EAAAA,WAAS,UAAK9C,IAAxC,eAAOO,EAAP,KAAcwC,EAAd,KAiBA,MAAO,CAAExC,MAAAA,EAAOwC,SAAAA,EAAUvC,aAfL,SAAC,GAAgB,IAAdwC,EAAa,EAAbA,OACd1B,EAA+B0B,EAA/B1B,MAAOrB,EAAwB+C,EAAxB/C,KAAMmB,EAAkB4B,EAAlB5B,KAAM6B,EAAYD,EAAZC,QACrBC,EAAoB,aAAT9B,EAAsB6B,EAAU3B,EACjDyB,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEflD,EAAOiD,GAFQ,GAInB,EAQuCzC,aANnB,SAAA2C,GACnBA,EAAEC,iBACFhD,GAAS,UAAKE,IACdwC,GAAS,UAAK/C,GACf,EAGF,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPege/LoginPege.jsx","shared/hooks/useForm.js"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\nimport useForm from 'shared/hooks/useForm';\nimport { TextField } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function LoginForm({ onSubmit }) {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n  const { email, password } = state;\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ maxWidth: '270' }}>\n      <TextField\n        id={emailId}\n        name=\"email\"\n        type=\"email\"\n        label=\"Email\"\n        value={email}\n        required\n        sx={{ mb: '1.5rem' }}\n        onChange={handleChange}\n      />\n      <TextField\n        id={passwordId}\n        name=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        value={password}\n        required\n        sx={{ mb: '1.5rem' }}\n        onChange={handleChange}\n      />\n      <Stack direction=\"row\" spacing={2}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{ mx: 'auto' }}\n          color=\"success\"\n        >\n          Login\n        </Button>\n      </Stack>\n    </Box>\n  );\n}","import LoginForm from 'components/LoginForm/LoginForm';\nimport { useDispatch } from 'react-redux';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport { login } from '../../redux/auth/authOperations';\n\nexport const commonStyles = {\n  boxShadow: 3,\n  maxWidth: '280px',\n  mx: 'auto',\n  my: 5,\n  p: 5,\n  border: 1,\n};\n\nexport default function LoginPege() {\n  const dispatch = useDispatch();\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <Container sx={{ mt: '1rem', maxWidth: '1000px' }}>\n      <Box sx={{ ...commonStyles, borderRadius: '16px' }}>\n        <LoginForm onSubmit={onLogin} />\n      </Box>\n    </Container>\n  );\n}","import { useState } from 'react';\n\nexport default function useForm({ initialState, onSubmit }) {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n}\n"],"names":["initialState","name","email","password","LoginForm","onSubmit","useForm","state","handleChange","handleSubmit","emailId","useMemo","nanoid","passwordId","Box","component","sx","maxWidth","TextField","id","type","label","value","required","mb","onChange","Stack","direction","spacing","Button","variant","mx","color","commonStyles","boxShadow","my","p","border","LoginPege","dispatch","useDispatch","Container","mt","borderRadius","data","login","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}